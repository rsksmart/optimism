// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package genesis

import (
	"encoding/json"
	"math/big"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*blockMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (r RootstockBlock) MarshalJSON() ([]byte, error) {
	type RootstockBlock struct {
		MinimumGasPrice *hexutil.Big `json:"minimumGasPrice" rlp:"optional"`
	}
	var enc RootstockBlock
	enc.MinimumGasPrice = (*hexutil.Big)(r.MinimumGasPrice)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (r *RootstockBlock) UnmarshalJSON(input []byte) error {
	type RootstockBlock struct {
		MinimumGasPrice *hexutil.Big `json:"minimumGasPrice" rlp:"optional"`
	}
	var dec RootstockBlock
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.MinimumGasPrice != nil {
		r.MinimumGasPrice = (*big.Int)(dec.MinimumGasPrice)
	}
	return nil
}
